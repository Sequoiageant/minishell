A COMMENCER

- Creer une fonction display_prompt() ?

BUILT INS

- built in echo: gerer ou non l'éventualité d'un problème de "write"
- voir si on ajoute une condition pour les built ins qui exit avec 2. A priori correspond aux "invalid options", donc pas à gérer puisque nos built ins ne gèrent pas d'option (sauf echo, qui ne semble jamais retourner "invalid option")

AUTRE

- LEAKS still reachable dans valgrind (plus de leak après le ctrl-D) dans le cas ou on exit() au sein d'un fork(): 
  par exemple commande vide ou commande qui n'existe pas, cf ft_exec_cmd.
    = duplication du process au moment du fork(), donc duplication aussi de tous les mallocs ??
    pourquoi ne le fait pas quand on envoie un execve ?
    pas grave vu que plus de leak après un ctrl-D ? une fois qu'on exit le process, il libère toute la mémoire
- utiliser le char **env argument du main plutot que __environ pour récupérer l'environnement ? 
- redirs: sur les execed cmds, voir s'il faut "restaurer stdout / stdin" -> a priori on en a plus besoin, car si l'execve retourne une erreur: dans ce cas on affiche le message d'erreur sur STDERR

BONUS (?)

- built in export: gerer le +=
- built in cd: 
    gérer ou non le cas "invalid option" (exit code = 2) ? Non a priori car on a pas à gérer d'option sur cd...
- Gerer le ~

NORME

- proteger les mallocs, pipe, fork, dup ... -> voir quand ca vaut le coup :)
- pid globale = OK norme ?

PARSING
